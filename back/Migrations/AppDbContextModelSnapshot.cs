// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Netfritz.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Netfritz.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Netfritz.Core.Entities.CompraEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<string>("ClienteEntityId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FitaEntityId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteEntityId");

                    b.HasIndex("FitaEntityId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("Netfritz.Core.Entities.FitaEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<int>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.Property<string>("imagemUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fitas");
                });

            modelBuilder.Entity("Netfritz.Core.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("Netfritz.Core.Entities.AdministradorEntity", b =>
                {
                    b.HasBaseType("Netfritz.Core.Entities.Usuario");

                    b.HasDiscriminator().HasValue("AdministradorEntity");
                });

            modelBuilder.Entity("Netfritz.Core.Entities.ClienteEntity", b =>
                {
                    b.HasBaseType("Netfritz.Core.Entities.Usuario");

                    b.Property<string>("Cartao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.HasDiscriminator().HasValue("ClienteEntity");
                });

            modelBuilder.Entity("Netfritz.Core.Entities.CompraEntity", b =>
                {
                    b.HasOne("Netfritz.Core.Entities.ClienteEntity", "ClienteEntitiy")
                        .WithMany()
                        .HasForeignKey("ClienteEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Netfritz.Core.Entities.FitaEntity", "FitaEntity")
                        .WithMany()
                        .HasForeignKey("FitaEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Netfritz.Core.Entities.AvaliacaoEntity", "Avaliacao", b1 =>
                        {
                            b1.Property<string>("CompraEntityId")
                                .HasColumnType("text");

                            b1.Property<string>("Comentario")
                                .HasColumnType("text");

                            b1.Property<int>("Nota")
                                .HasColumnType("integer");

                            b1.HasKey("CompraEntityId");

                            b1.ToTable("Compras");

                            b1.WithOwner()
                                .HasForeignKey("CompraEntityId");
                        });

                    b.Navigation("Avaliacao");

                    b.Navigation("ClienteEntitiy");

                    b.Navigation("FitaEntity");
                });
#pragma warning restore 612, 618
        }
    }
}
